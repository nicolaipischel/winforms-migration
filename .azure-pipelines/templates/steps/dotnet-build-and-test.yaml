parameters:
  - name: solutionDirectory
    displayName: The path to the dotnet solution (*.sln)
    type: string
  - name: runTests
    displayName: Value indication whether the tests should be executed or not
    type: boolean
    default: false  
  - name: projectToPublish
    displayName: The path to the dotnet project that should be published
    type: string
    default: ""
  - name: dotnetArtifactName
    displayName: The name of the dotnet artifact that is published
    type: string

steps:
  - task: UseDotNet@2.207.2
    displayName: Install .NET Core SDK
    inputs:
      version: 7.0.x

  - task: DotNetCoreCLI@2
    displayName: Building .NET Application
    inputs:
      command: build
      workingDirectory: ${{ parameters.solutionDir }}
      arguments: --configuration $(BuildConfiguration)

  - task: DotNetCoreCLI@2
    condition: and(succeeded(), eq(${{ parameters.runTests }}, true))
    displayName: Running Tests
    inputs:
      command: test
      workingDirectory: ${{ parameters.solutionDirectory }}
      arguments: /p:CollectCoverage=true /p:CoverletOutput=$(Build.SourcesDirectory)/TestResult/ /p:CoverletOutputFormat=cobertura

  - task: PublishCodeCoverageResults@1
    condition: and(succeeded(), eq(${{ parameters.runTests }}, true))
    displayName: Uploading Coverage Results
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(Build.SourcesDirectory)/TestResult/**/*coverage.cobertura.xml"
  
  - task: DotNetCoreCLI@2
    displayName: Publishing .NET Application
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      command: publish
      projects: ${{ parameters.projectToPublish }}
      arguments: --configuration $(BuildConfiguration) --output $(Pipeline.Workspace)/${{ parameters.dotnetArtifactName}}
      modifyOutputPath: false
      publishWebProjects: false
      zipAfterPublish: false